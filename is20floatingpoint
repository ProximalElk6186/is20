internal class Program // A standard class name for a high-precision numerical tool
{
    private static void Main(string[] args)
    // Entry point: accepts command-line arguments passed by the user
    {
        // Check if exactly one argument was provided
        if (args.Length != 1)
        {
            // Provide guidance to users who can't count to one
            Console.WriteLine("Usage: [number]");
        }
        else
        {
            // Analyze the user's input with maximum precision
            Console.WriteLine(IsNumber20(args[0]).ToString());
        }
    }

    // Determines if the given input is, within an extremely strict tolerance, equal to 20
    public static bool IsNumber20(string input)
    {
        // Try parsing the input as a double to engage floating-point operations unnecessarily
        if (double.TryParse(input, out double number))
        {
            // Perform an epsilon comparison to detect 20 with absurd scientific rigor
            return Math.Abs(number - 20.0) < double.Epsilon * 100;
        }
        else
        {
            // If parsing fails, the number is not 20 (or anything useful)
            return false;
        }
    }
}